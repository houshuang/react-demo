{"id":"test.js","dependencies":[{"name":"/Users/stian/minerva/sle/react-demo/.babelrc","includedInParent":true,"mtime":1555241978647},{"name":"/Users/stian/minerva/sle/react-demo/package.json","includedInParent":true,"mtime":1555242221333},{"name":"react","loc":{"line":1,"column":23},"parent":"/Users/stian/minerva/sle/react-demo/src/test.js","resolved":"/Users/stian/minerva/sle/react-demo/node_modules/react/index.js"},{"name":"./connection","loc":{"line":2,"column":27},"parent":"/Users/stian/minerva/sle/react-demo/src/test.js","resolved":"/Users/stian/minerva/sle/react-demo/src/connection.js"},{"name":"reactive-tools","loc":{"line":3,"column":28},"parent":"/Users/stian/minerva/sle/react-demo/src/test.js","resolved":"/Users/stian/minerva/sle/react-demo/node_modules/reactive-tools/lib/index.js"},{"name":"./ReactiveRichText/main","loc":{"line":4,"column":29},"parent":"/Users/stian/minerva/sle/react-demo/src/test.js","resolved":"/Users/stian/minerva/sle/react-demo/src/ReactiveRichText/main.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Display = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _connection = require(\"./connection\");\n\nvar _reactiveTools = require(\"reactive-tools\");\n\nvar _main = _interopRequireDefault(require(\"./ReactiveRichText/main\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar Display = function Display() {\n  var _useReactive = (0, _reactiveTools.useReactive)(_connection.connection, 'examples', 'stian5'),\n      _useReactive2 = _slicedToArray(_useReactive, 3),\n      data = _useReactive2[0],\n      dataFn = _useReactive2[1],\n      timeout = _useReactive2[2];\n\n  if (timeout) {\n    return React.createElement(\"h1\", null, \"Timeout\");\n  }\n\n  if (!data) {\n    return '...';\n  }\n\n  return React.createElement(\"div\", null, React.createElement(_main.default, {\n    data: data,\n    dataFn: dataFn,\n    path: \"text\",\n    userId: \"hi\"\n  }), React.createElement(\"hr\", null), React.createElement(_main.default, {\n    data: data,\n    dataFn: dataFn,\n    path: \"text2\",\n    userId: \"hi\"\n  }));\n};\n\nexports.Display = Display;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"test.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"test.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"test.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"test.js","original":{"line":4,"column":0}},{"generated":{"line":28,"column":0},"source":"test.js","original":{"line":6,"column":7}},{"name":"Display","generated":{"line":28,"column":4},"source":"test.js","original":{"line":6,"column":13}},{"generated":{"line":28,"column":11},"source":"test.js","original":{"line":6,"column":20}},{"generated":{"line":28,"column":14},"source":"test.js","original":{"line":6,"column":23}},{"name":"Display","generated":{"line":28,"column":23},"source":"test.js","original":{"line":6,"column":13}},{"generated":{"line":28,"column":30},"source":"test.js","original":{"line":6,"column":23}},{"generated":{"line":28,"column":33},"source":"test.js","original":{"line":6,"column":29}},{"generated":{"line":29,"column":0},"source":"test.js","original":{"line":6,"column":29}},{"generated":{"line":29,"column":21},"source":"test.js","original":{"line":7,"column":34}},{"name":"connection","generated":{"line":29,"column":53},"source":"test.js","original":{"line":7,"column":46}},{"generated":{"line":29,"column":75},"source":"test.js","original":{"line":7,"column":34}},{"generated":{"line":29,"column":77},"source":"test.js","original":{"line":7,"column":58}},{"generated":{"line":29,"column":87},"source":"test.js","original":{"line":7,"column":34}},{"generated":{"line":29,"column":89},"source":"test.js","original":{"line":7,"column":70}},{"generated":{"line":29,"column":97},"source":"test.js","original":{"line":7,"column":34}},{"generated":{"line":29,"column":98},"source":"test.js","original":{"line":6,"column":29}},{"generated":{"line":30,"column":0},"source":"test.js","original":{"line":6,"column":29}},{"generated":{"line":31,"column":0},"source":"test.js","original":{"line":6,"column":29}},{"name":"data","generated":{"line":31,"column":6},"source":"test.js","original":{"line":7,"column":9}},{"generated":{"line":31,"column":10},"source":"test.js","original":{"line":6,"column":29}},{"generated":{"line":32,"column":0},"source":"test.js","original":{"line":6,"column":29}},{"name":"dataFn","generated":{"line":32,"column":6},"source":"test.js","original":{"line":7,"column":15}},{"generated":{"line":32,"column":12},"source":"test.js","original":{"line":6,"column":29}},{"generated":{"line":33,"column":0},"source":"test.js","original":{"line":6,"column":29}},{"name":"timeout","generated":{"line":33,"column":6},"source":"test.js","original":{"line":7,"column":23}},{"generated":{"line":33,"column":13},"source":"test.js","original":{"line":6,"column":29}},{"generated":{"line":35,"column":0},"source":"test.js","original":{"line":8,"column":2}},{"name":"timeout","generated":{"line":35,"column":6},"source":"test.js","original":{"line":8,"column":6}},{"generated":{"line":35,"column":13},"source":"test.js","original":{"line":8,"column":2}},{"generated":{"line":35,"column":15},"source":"test.js","original":{"line":8,"column":15}},{"generated":{"line":36,"column":0},"source":"test.js","original":{"line":9,"column":4}},{"generated":{"line":36,"column":11},"source":"test.js","original":{"line":9,"column":11}},{"generated":{"line":36,"column":53},"source":"test.js","original":{"line":9,"column":4}},{"generated":{"line":37,"column":0},"source":"test.js","original":{"line":10,"column":3}},{"generated":{"line":39,"column":0},"source":"test.js","original":{"line":11,"column":2}},{"generated":{"line":39,"column":6},"source":"test.js","original":{"line":11,"column":6}},{"name":"data","generated":{"line":39,"column":7},"source":"test.js","original":{"line":11,"column":7}},{"generated":{"line":39,"column":11},"source":"test.js","original":{"line":11,"column":2}},{"generated":{"line":39,"column":13},"source":"test.js","original":{"line":11,"column":13}},{"generated":{"line":40,"column":0},"source":"test.js","original":{"line":12,"column":4}},{"generated":{"line":40,"column":11},"source":"test.js","original":{"line":12,"column":11}},{"generated":{"line":40,"column":16},"source":"test.js","original":{"line":12,"column":4}},{"generated":{"line":41,"column":0},"source":"test.js","original":{"line":13,"column":3}},{"generated":{"line":43,"column":0},"source":"test.js","original":{"line":14,"column":2}},{"generated":{"line":43,"column":9},"source":"test.js","original":{"line":15,"column":4}},{"generated":{"line":43,"column":42},"source":"test.js","original":{"line":16,"column":6}},{"generated":{"line":43,"column":62},"source":"test.js","original":{"line":16,"column":7}},{"generated":{"line":43,"column":75},"source":"test.js","original":{"line":16,"column":6}},{"generated":{"line":44,"column":0},"source":"test.js","original":{"line":16,"column":24}},{"generated":{"line":44,"column":4},"source":"test.js","original":{"line":16,"column":24}},{"generated":{"line":44,"column":8},"source":"test.js","original":{"line":16,"column":28}},{"name":"data","generated":{"line":44,"column":10},"source":"test.js","original":{"line":16,"column":30}},{"generated":{"line":44,"column":14},"source":"test.js","original":{"line":16,"column":6}},{"generated":{"line":45,"column":0},"source":"test.js","original":{"line":16,"column":36}},{"generated":{"line":45,"column":4},"source":"test.js","original":{"line":16,"column":36}},{"generated":{"line":45,"column":10},"source":"test.js","original":{"line":16,"column":42}},{"name":"dataFn","generated":{"line":45,"column":12},"source":"test.js","original":{"line":16,"column":44}},{"generated":{"line":45,"column":18},"source":"test.js","original":{"line":16,"column":6}},{"generated":{"line":46,"column":0},"source":"test.js","original":{"line":16,"column":52}},{"generated":{"line":46,"column":4},"source":"test.js","original":{"line":16,"column":52}},{"generated":{"line":46,"column":8},"source":"test.js","original":{"line":16,"column":56}},{"generated":{"line":46,"column":10},"source":"test.js","original":{"line":16,"column":57}},{"generated":{"line":46,"column":16},"source":"test.js","original":{"line":16,"column":6}},{"generated":{"line":47,"column":0},"source":"test.js","original":{"line":16,"column":64}},{"generated":{"line":47,"column":4},"source":"test.js","original":{"line":16,"column":64}},{"generated":{"line":47,"column":10},"source":"test.js","original":{"line":16,"column":70}},{"generated":{"line":47,"column":12},"source":"test.js","original":{"line":16,"column":71}},{"generated":{"line":48,"column":0},"source":"test.js","original":{"line":16,"column":6}},{"generated":{"line":48,"column":4},"source":"test.js","original":{"line":15,"column":4}},{"generated":{"line":48,"column":6},"source":"test.js","original":{"line":17,"column":6}},{"generated":{"line":48,"column":37},"source":"test.js","original":{"line":15,"column":4}},{"generated":{"line":48,"column":39},"source":"test.js","original":{"line":18,"column":6}},{"generated":{"line":48,"column":59},"source":"test.js","original":{"line":18,"column":7}},{"generated":{"line":48,"column":72},"source":"test.js","original":{"line":18,"column":6}},{"generated":{"line":49,"column":0},"source":"test.js","original":{"line":18,"column":24}},{"generated":{"line":49,"column":4},"source":"test.js","original":{"line":18,"column":24}},{"generated":{"line":49,"column":8},"source":"test.js","original":{"line":18,"column":28}},{"name":"data","generated":{"line":49,"column":10},"source":"test.js","original":{"line":18,"column":30}},{"generated":{"line":49,"column":14},"source":"test.js","original":{"line":18,"column":6}},{"generated":{"line":50,"column":0},"source":"test.js","original":{"line":18,"column":36}},{"generated":{"line":50,"column":4},"source":"test.js","original":{"line":18,"column":36}},{"generated":{"line":50,"column":10},"source":"test.js","original":{"line":18,"column":42}},{"name":"dataFn","generated":{"line":50,"column":12},"source":"test.js","original":{"line":18,"column":44}},{"generated":{"line":50,"column":18},"source":"test.js","original":{"line":18,"column":6}},{"generated":{"line":51,"column":0},"source":"test.js","original":{"line":18,"column":52}},{"generated":{"line":51,"column":4},"source":"test.js","original":{"line":18,"column":52}},{"generated":{"line":51,"column":8},"source":"test.js","original":{"line":18,"column":56}},{"generated":{"line":51,"column":10},"source":"test.js","original":{"line":18,"column":57}},{"generated":{"line":51,"column":17},"source":"test.js","original":{"line":18,"column":6}},{"generated":{"line":52,"column":0},"source":"test.js","original":{"line":18,"column":65}},{"generated":{"line":52,"column":4},"source":"test.js","original":{"line":18,"column":65}},{"generated":{"line":52,"column":10},"source":"test.js","original":{"line":18,"column":71}},{"generated":{"line":52,"column":12},"source":"test.js","original":{"line":18,"column":72}},{"generated":{"line":53,"column":0},"source":"test.js","original":{"line":18,"column":6}},{"generated":{"line":53,"column":4},"source":"test.js","original":{"line":15,"column":4}},{"generated":{"line":53,"column":5},"source":"test.js","original":{"line":14,"column":2}},{"generated":{"line":54,"column":0},"source":"test.js","original":{"line":21,"column":1}},{"generated":{"line":54,"column":1},"source":"test.js","original":{"line":6,"column":7}}],"sources":{"test.js":"import * as React from 'react';\nimport { connection } from './connection';\nimport { useReactive } from 'reactive-tools';\nimport ReactiveRichText from './ReactiveRichText/main';\n\nexport const Display = () => {\n  const [data, dataFn, timeout] = useReactive(connection, 'examples', 'stian5');\n  if (timeout) {\n    return <h1>Timeout</h1>;\n  }\n  if (!data) {\n    return '...';\n  }\n  return (\n    <div>\n      <ReactiveRichText data={data} dataFn={dataFn} path=\"text\" userId=\"hi\" />\n      <hr />\n      <ReactiveRichText data={data} dataFn={dataFn} path=\"text2\" userId=\"hi\" />\n    </div>\n  );\n};\n"},"lineCount":null}},"error":null,"hash":"1c2a49a7ce3b0908f249aa36182267e4","cacheData":{"env":{}}}